{"version":3,"sources":["API/api.js","Reducers/employeeReducer.js","Components/EmployeePage.js","Containers/employeeContainer.js","Actions/employeeAction.js","App.js","store.js","index.js"],"names":["employeeAPI","axios","get","EMP","initialState","employeeReducer","state","action","type","persons","map","e","id","status","EmployeePage","props","alphabet","data","months","radioChange","value","setStatus","className","letter","employee","filter","lastName","match","filteredEmployee","firstName","name","onChange","checked","length","m","moment","dob","format","EmployeeContainerAPI","localStorage","getItem","JSON","parse","this","setEmployee","getEmployee","setItem","stringify","Component","EmployeeContainer","connect","dispatch","then","response","temp","forEach","item","App","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bd06c75.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const employeeAPI = {\r\n    getEmployee() {\r\n        return axios.get('https://yalantis-react-school-api.yalantis.com/api/task0/users')\r\n    }\r\n}","export const EMP = {\r\n    SET_EMPLOYEE: \"SET-EMPLOYEE\",\r\n    STATUS_CHANGE: \"STATUS-CHANGE\",\r\n}\r\nlet initialState = {}\r\n\r\nconst employeeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n        case EMP.SET_EMPLOYEE:\r\n            return {\r\n                ...state,\r\n                persons: action.persons\r\n            }\r\n\r\n        case EMP.STATUS_CHANGE:\r\n            return {\r\n                ...state,\r\n                persons: state.persons.map(e => {\r\n                    if(e.id === action.id)\r\n                    {\r\n                        return {...e, status: action.status}\r\n                    }\r\n                    return e\r\n                })\r\n            }\r\n    }\r\n}\r\n\r\nexport default employeeReducer;","import moment from 'moment'\r\nimport data from '../Data/Data.json'\r\n\r\nconst EmployeePage = (props) => {\r\n\r\n    let alphabet = data.alphabet\r\n    let months = data.months\r\n    const radioChange = (value, id) => {\r\n        props.setStatus(id, value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='main'>\r\n                <div className='employeesBlock'>\r\n                    <h1 className='employees-title'>\r\n                        Employees\r\n                    </h1>\r\n                    <div className='byLetter'>\r\n                        {alphabet.map(letter => (\r\n                                <div className='letter'>\r\n                                    <h2>\r\n                                        {letter}\r\n                                    </h2>\r\n                                    <div>\r\n                                        {props.employee.filter(e => e.lastName.match(letter)).map(filteredEmployee => (\r\n                                                <div>\r\n                                                    <h2 className={filteredEmployee.status ? \"active\" : \"not-active\"}>\r\n                                                        {filteredEmployee.lastName} {filteredEmployee.firstName}\r\n                                                    </h2>\r\n                                                    <form>\r\n                                                        <div>\r\n                                                            <input type=\"radio\" name=\"status\"\r\n                                                                   onChange={() => radioChange(true, filteredEmployee.id)}\r\n                                                                   checked={filteredEmployee.status === true}/>\r\n                                                            Active\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <input type=\"radio\" name=\"status\"\r\n                                                                   onChange={() => radioChange(false, filteredEmployee.id)}\r\n                                                                   checked={filteredEmployee.status === false}/>\r\n                                                            Not active\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            )\r\n                                        )}\r\n                                    </div>\r\n                                    {props.employee.filter(e => e.lastName[0].match(letter)).length === 0 ?\r\n                                        <h2>-----------</h2> : <></>}\r\n                                </div>\r\n                            )\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className='birthdayBlock'>\r\n                    <hr className=\"verticalLine\"/>\r\n                    <h1 className=\"birthday\">\r\n                        Employees birthday\r\n                    </h1>\r\n                    <hr/>\r\n                    <div className=\"birthday\">\r\n                        {props.employee.filter(e => e.status).length === 0 ? <h2>Employees List is empty</h2> : <></>}\r\n                        {months.map(m => (<div>\r\n                            {props.employee.filter(e => e.status && m === moment(e.dob).format(\"MMMM\")).length > 0 ?\r\n                                <h2>{m}</h2> : <></>}\r\n                            {props.employee.filter(e => e.status).map(filteredEmployee => (<div>\r\n                                <ul>\r\n                                    {m === moment(filteredEmployee.dob).format(\"MMMM\") ?\r\n                                        <li>\r\n                                            <h3> {filteredEmployee.lastName} {filteredEmployee.firstName} - {moment(filteredEmployee.dob).format(\"D MMMM YYYY\")}</h3>\r\n                                        </li>\r\n                                        : <h4></h4>}\r\n                                </ul>\r\n                            </div>))}\r\n                        </div>))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr className=\"centralLine\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployeePage;\r\n","import {connect} from \"react-redux\";\r\nimport React, {Component} from 'react';\r\nimport {getEmployee, setEmployee, setStatus} from \"../Actions/employeeAction\";\r\nimport EmployeePage from \"../Components/EmployeePage\";\r\n\r\nconst storageName = 'userData'\r\n\r\nclass EmployeeContainerAPI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if (localStorage.getItem('userData')) {\r\n            this.state = {\r\n                employee: JSON.parse(localStorage.getItem('userData')).persons\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state) {\r\n            this.props.setEmployee(this.state.employee)\r\n        } else {\r\n            this.props.getEmployee()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem(storageName, JSON.stringify(this.props))\r\n    }\r\n\r\n    render() {\r\n        if (this.props.persons != null) {\r\n            return <div>\r\n                <EmployeePage employee={this.props.persons} setStatus={this.props.setStatus}/>\r\n            </div>\r\n        } else {\r\n            return <></>\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({persons: state.employee.persons})\r\n\r\nconst EmployeeContainer = connect(mapStateToProps, {getEmployee, setStatus, setEmployee})(EmployeeContainerAPI);\r\nexport default EmployeeContainer;","import {employeeAPI} from \"../API/api\";\r\nimport {EMP} from \"../Reducers/employeeReducer\";\r\n\r\nexport const getEmployee = () => (dispatch) => {\r\n    employeeAPI.getEmployee().then(response => {\r\n        if (response) {\r\n            let temp = response.data\r\n            temp.forEach(function (item) {\r\n                item.status = false;\r\n            })\r\n            dispatch({type: EMP.SET_EMPLOYEE, persons: temp})\r\n        }\r\n    })\r\n}\r\nexport const setEmployee = (persons) => ({type: EMP.SET_EMPLOYEE, persons: persons})\r\nexport const setStatus = (id, status) => ({type: EMP.STATUS_CHANGE, id, status})\r\n","import './App.css';\nimport EmployeeContainer from \"./Containers/employeeContainer\";\nimport React from \"react\";\n\nconst App = () => {\n\n    return (\n        <div>\n         <EmployeeContainer/>\n        </div>\n    );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport employeeReducer from \"./Reducers/employeeReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    employee: employeeReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;\r\nwindow.store = store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}